name: Release

on:
  push:
    branches: [main]

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branches: |
            [
              'main'
            ]
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github

      - name: Create Release Notes
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "New version: ${{ steps.semantic.outputs.new_release_version }}"
          echo "Release notes: ${{ steps.semantic.outputs.new_release_notes }}"

      - name: Update changelog
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const version = '${{ steps.semantic.outputs.new_release_version }}';
            const notes = `${{ steps.semantic.outputs.new_release_notes }}`;

            const changelog = `## [${version}] - ${new Date().toISOString().split('T')[0]}\n\n${notes}\n\n`;

            if (fs.existsSync('CHANGELOG.md')) {
              const existing = fs.readFileSync('CHANGELOG.md', 'utf8');
              fs.writeFileSync('CHANGELOG.md', changelog + existing);
            } else {
              fs.writeFileSync('CHANGELOG.md', `# Changelog\n\n${changelog}`);
            }

      - name: Send Slack notification
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              text: 'ðŸŽ‰ New Release Published',
              attachments: [{
                color: 'good',
                text: `Version: ${{ steps.semantic.outputs.new_release_version }}\nRelease Notes: ${{ steps.semantic.outputs.new_release_notes }}`
              }]
            }
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
