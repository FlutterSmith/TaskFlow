name: Deploy Backend to Railway

on:
  push:
    branches: [main]
    paths:
      - 'api/**'
      - '.github/workflows/deploy-backend.yml'

  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'production' }}

    defaults:
      run:
        working-directory: ./api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./api/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run prisma:generate

      - name: Build project
        run: npm run build

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        run: railway up --service=${{ secrets.RAILWAY_SERVICE_ID }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Run database migrations
        run: railway run npm run prisma:migrate:deploy
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Wait for deployment
        run: sleep 30

      - name: Health check
        run: |
          max_attempts=10
          attempt=0
          while [ $attempt -lt $max_attempts ]; do
            if curl -f ${{ secrets.RAILWAY_APP_URL }}/health; then
              echo "Health check passed"
              exit 0
            fi
            attempt=$((attempt + 1))
            echo "Attempt $attempt failed, retrying..."
            sleep 10
          done
          echo "Health check failed after $max_attempts attempts"
          exit 1

      - name: Run smoke tests
        run: |
          # Test API is accessible
          curl -f ${{ secrets.RAILWAY_APP_URL }}/api/v1 || exit 1

          # Test health endpoint
          curl -f ${{ secrets.RAILWAY_APP_URL }}/health || exit 1

      - name: Create Sentry release
        uses: getsentry/action-release@v3
        if: github.event.inputs.environment == 'production' || github.ref == 'refs/heads/main'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: taskflow-api
        with:
          environment: ${{ github.event.inputs.environment || 'production' }}
          version: ${{ github.sha }}

      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          text: |
            Backend Deployment ${{ job.status }}
            Environment: ${{ github.event.inputs.environment || 'production' }}
            URL: ${{ secrets.RAILWAY_APP_URL }}
            Version: ${{ github.sha }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed, initiating rollback..."
          railway rollback --service=${{ secrets.RAILWAY_SERVICE_ID }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
